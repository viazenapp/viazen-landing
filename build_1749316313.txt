
> react_repo@0.0.0 build
> pnpm install && rm -rf node_modules/.vite-temp && tsc -b && vite build

 WARN  Moving @eslint/js that was installed by a different package manager to "node_modules/.ignored"
 WARN  Moving @types/node that was installed by a different package manager to "node_modules/.ignored"
 WARN  Moving @types/react that was installed by a different package manager to "node_modules/.ignored"
 WARN  Moving @types/react-dom that was installed by a different package manager to "node_modules/.ignored"
 WARN  Moving @types/react-router-dom that was installed by a different package manager to "node_modules/.ignored"
 WARN  1 other warnings
23456789 WARN  10 other warnings
1234567892012345678930123456789401234567895012345678960Progress: resolved 0, reused 1, downloaded 0, added 0
4, reused 4 WARN  deprecated emailjs-com@3.2.0: The SDK name changed to @emailjs/browser
Progress: resolved 4, reused 4, downloaded 0, added 0
Progress: resolved 21, reused 20, downloaded 0, added 0
44, reused 437, reused 4653, reused 5262, reused 609, reused 67Progress: resolved 101, reused 99, downloaded 0, added 0
Progress: resolved 173, reused 171, downloaded 0, added 0
280, reused 278375, reused 373, downloaded 2401, reused 384, downloaded 3Progress: resolved 415, reused 388, downloaded 16, added 0
24, reused 388, downloaded 252, reused 391, downloaded 279, reused 392, downloaded 2865, reused 393, downloaded 2971, reused 398, downloaded 3184, reused 400, downloaded 357, reused 400, downloaded 38409, reused 401, downloaded 44905Packages: +447
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 490, reused 401, downloaded 45, added 0
1Progress: resolved 490, reused 401, downloaded 45, added 25
Progress: resolved 490, reused 401, downloaded 45, added 104
2386, added 3641137Progress: resolved 490, reused 401, downloaded 46, added 447, done

dependencies:
+ @emailjs/browser 4.4.1
+ @hookform/resolvers 3.10.0
+ @radix-ui/react-accordion 1.2.4
+ @radix-ui/react-alert-dialog 1.1.7
+ @radix-ui/react-aspect-ratio 1.1.3
+ @radix-ui/react-avatar 1.1.4
+ @radix-ui/react-checkbox 1.1.5
+ @radix-ui/react-collapsible 1.1.4
+ @radix-ui/react-context-menu 2.2.7
+ @radix-ui/react-dialog 1.1.7
+ @radix-ui/react-dropdown-menu 2.1.7
+ @radix-ui/react-hover-card 1.1.7
+ @radix-ui/react-label 2.1.3
+ @radix-ui/react-menubar 1.1.7
+ @radix-ui/react-navigation-menu 1.2.6
+ @radix-ui/react-popover 1.1.7
+ @radix-ui/react-progress 1.1.3
+ @radix-ui/react-radio-group 1.2.4
+ @radix-ui/react-scroll-area 1.2.4
+ @radix-ui/react-select 2.1.7
+ @radix-ui/react-separator 1.1.3
+ @radix-ui/react-slider 1.2.4
+ @radix-ui/react-slot 1.2.0
+ @radix-ui/react-switch 1.1.4
+ @radix-ui/react-tabs 1.1.4
+ @radix-ui/react-toast 1.2.7
+ @radix-ui/react-toggle 1.1.3
+ @radix-ui/react-toggle-group 1.1.3
+ @radix-ui/react-tooltip 1.2.0
+ class-variance-authority 0.7.1
+ clsx 2.1.1
+ cmdk 1.0.0
+ date-fns 3.6.0
+ emailjs-com 3.2.0 deprecated
+ embla-carousel-react 8.6.0
+ ethers 5.8.0 (6.14.3 is available)
+ input-otp 1.4.2
+ lucide-react 0.364.0
+ next-themes 0.4.6
+ react 18.3.1
+ react-day-picker 8.10.1
+ react-dom 18.3.1
+ react-hook-form 7.55.0
+ react-resizable-panels 2.1.7
+ react-router-dom 6.30.0
+ recharts 2.15.3
+ sonner 1.7.4
+ tailwind-merge 2.6.0
+ tailwindcss-animate 1.0.7
+ vaul 1.1.2
+ zod 3.24.2

devDependencies:
+ @eslint/js 9.24.0
+ @types/node 22.14.1
+ @types/react 18.3.20
+ @types/react-dom 18.3.6
+ @types/react-router-dom 5.3.3
+ @vitejs/plugin-react 4.3.4
+ autoprefixer 10.4.20
+ eslint 9.24.0
+ eslint-plugin-react-hooks 5.2.0
+ eslint-plugin-react-refresh 0.4.19
+ globals 15.15.0
+ postcss 8.4.49
+ tailwindcss 3.4.16
+ typescript 5.6.3
+ typescript-eslint 8.29.1
+ vite 6.2.6

╭ Warning ─────────────────────────────────────────────────────────────────────╮
│                                                                              │
│   Ignored build scripts: esbuild.                                            │
│   Run "pnpm approve-builds" to pick which dependencies should be allowed     │
│   to run scripts.                                                            │
│                                                                              │
╰──────────────────────────────────────────────────────────────────────────────╯

Done in 11.1s using pnpm v10.11.1
src/components/Web3WalletButton.tsx:58:90 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                            

src/components/Web3WalletButton.tsx:58:113 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                   

src/components/Web3WalletButton.tsx:58:114 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                    ~

src/components/Web3WalletButton.tsx:58:193 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                   

src/components/Web3WalletButton.tsx:58:200 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                          

src/components/Web3WalletButton.tsx:58:206 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                

src/components/Web3WalletButton.tsx:58:208 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                  

src/components/Web3WalletButton.tsx:58:209 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                   ~

src/components/Web3WalletButton.tsx:58:244 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                      

src/components/Web3WalletButton.tsx:58:245 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                       ~

src/components/Web3WalletButton.tsx:58:269 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                               

src/components/Web3WalletButton.tsx:58:270 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                ~

src/components/Web3WalletButton.tsx:58:303 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                 

src/components/Web3WalletButton.tsx:58:304 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                  ~

src/components/Web3WalletButton.tsx:58:386 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                                                                                                    

src/components/Web3WalletButton.tsx:58:392 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                                                                                                          

src/components/Web3WalletButton.tsx:58:394 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                                                                                                            

src/components/Web3WalletButton.tsx:58:395 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                                                                                                             ~

src/components/Web3WalletButton.tsx:58:434 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                                                                                                                                                    

src/components/Web3WalletButton.tsx:58:435 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                                                                                                                                                     ~

src/components/Web3WalletButton.tsx:58:493 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

src/components/Web3WalletButton.tsx:58:494 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ~

src/components/Web3WalletButton.tsx:58:586 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


src/components/Web3WalletButton.tsx:58:587 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
~

src/components/Web3WalletButton.tsx:58:601 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


src/components/Web3WalletButton.tsx:58:608 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


src/components/Web3WalletButton.tsx:58:610 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


src/components/Web3WalletButton.tsx:58:611 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
~

src/components/Web3WalletButton.tsx:58:638 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


src/components/Web3WalletButton.tsx:58:644 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


src/components/Web3WalletButton.tsx:58:645 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
~

src/components/Web3WalletButton.tsx:58:655 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


src/components/Web3WalletButton.tsx:58:656 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
~

src/components/Web3WalletButton.tsx:58:699 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


src/components/Web3WalletButton.tsx:58:700 - error TS1434: Unexpected keyword or identifier.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ~

src/components/Web3WalletButton.tsx:58:778 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


src/components/Web3WalletButton.tsx:58:786 - error TS1127: Invalid character.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


src/components/Web3WalletButton.tsx:58:7848 - error TS1005: '}' expected.

58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};


  src/components/Web3WalletButton.tsx:58:654
    58       showToast(toast.success('Wallet Connected', 'Successfully connected to MetaMask'));\n    } catch (error) {\n      showToast(toast.error('Connection Failed', 'Failed to connect wallet'));\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnectWallet();\n    setShowPurchaseModal(false);\n    showToast(toast.info('Wallet Disconnected', 'Wallet has been disconnected'));\n  };\n\n  const handlePurchase = async () => {\n    if (!provider || !isConnected || chainId !== 80001) {\n      showToast(toast.warning('Wrong Network', 'Please switch to Polygon Mumbai Testnet'));\n      return;\n    }\n\n    setIsPurchasing(true);\n    \n    try {\n      const signer = provider.getSigner();\n      const tokenContract = new ViazTokenContract(provider, signer, chainId);\n      \n      // Show purchase started toast\n      showToast(toast.info('Transaction Started', 'Confirm the transaction in your wallet'));\n      \n      // For demo purposes, use demo purchase\n      const result = await tokenContract.demoTokenPurchase(purchaseAmount);\n      \n      // Show success toast with transaction details\n      showToast(toast.success(\n        'Purchase Successful!', \n        `Received ${result.tokensReceived} VIAZ tokens`,\n        { duration: 8000 }\n      ));\n      \n      // Show transaction hash toast\n      showToast(toast.info(\n        'Transaction Hash', \n        `${result.hash.substring(0, 20)}...`,\n        { duration: 10000 }\n      ));\n      \n      setShowPurchaseModal(false);\n      setPurchaseAmount('0.1');\n      \n      // Reload token info\n      const info = await tokenContract.getTokenInfo();\n      setTokenInfo(info);\n      \n    } catch (error: any) {\n      showToast(toast.error('Purchase Failed', error.message || 'Transaction failed'));\n    } finally {\n      setIsPurchasing(false);\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const getNetworkName = () => {\n    switch (chainId) {\n      case 80001:\n        return 'Polygon Mumbai';\n      case 1:\n        return 'Ethereum Mainnet';\n      case 137:\n        return 'Polygon Mainnet';\n      default:\n        return `Chain ${chainId}`;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <button\n        onClick={handleConnect}\n        disabled={isLoading}\n        className={`\n          flex items-center space-x-2 px-4 py-2 \n          bg-gradient-to-r from-purple-600 to-cyan-500 \n          hover:from-purple-700 hover:to-cyan-600 \n          text-white font-semibold rounded-lg \n          transition-all duration-200 \n          disabled:opacity-50 disabled:cursor-not-allowed\n          shadow-lg shadow-purple-500/30\n          ${className}\n        `}\n      >\n        {isLoading ? (\n          <Loader className=\"w-4 h-4 animate-spin\" />\n        ) : (\n          <Wallet className=\"w-4 h-4\" />\n        )}\n        <span className=\"hidden sm:inline\">\n          {isLoading ? 'Connecting...' : 'Connect Wallet'}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex items-center space-x-2\">\n        {/* Wallet Status */}\n        <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm text-white font-medium hidden sm:inline\">\n            {formatAddress(account!)}\n          </span>\n          <span className=\"text-xs text-gray-400 hidden md:inline\">\n            {getNetworkName()}\n          </span>\n        </div>\n\n        {/* Network Warning */}\n        {chainId !== 80001 && (\n          <button\n            onClick={switchToPolygonMumbai}\n            className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-600/20 border border-yellow-500/30 rounded text-yellow-400 text-xs hover:bg-yellow-600/30 transition-colors\"\n          >\n            <AlertCircle className=\"w-3 h-3\" />\n            <span className=\"hidden sm:inline\">Wrong Network</span>\n          </button>\n        )}\n\n        {/* Buy Tokens Button */}\n        {chainId === 80001 && (\n          <button\n            onClick={() => setShowPurchaseModal(true)}\n            className=\"px-3 py-2 bg-gradient-to-r from-green-600 to-emerald-500 hover:from-green-700 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 text-sm\"\n          >\n            Buy VIAZ\n          </button>\n        )}\n\n        {/* Disconnect Button */}\n        <button\n          onClick={handleDisconnect}\n          className=\"px-2 py-2 text-gray-400 hover:text-white transition-colors\"\n          title=\"Disconnect\"\n        >\n          <ExternalLink className=\"w-4 h-4\" />\n        </button>\n      </div>\n\n      {/* Purchase Modal */}\n      {showPurchaseModal && (\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-600/50 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Buy VIAZ Tokens</h3>\n            \n            {tokenInfo && (\n              <div className=\"bg-gray-800/50 rounded-lg p-4 mb-4\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"text-gray-400\">Token Price:</div>\n                  <div className=\"text-white\">{tokenInfo.price} MATIC</div>\n                  <div className=\"text-gray-400\">Your Balance:</div>\n                  <div className=\"text-white\">{tokenInfo.balance} VIAZ</div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Amount (MATIC)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.001\"\n                min=\"0.001\"\n                max=\"10\"\n                value={purchaseAmount}\n                onChange={(e) => setPurchaseAmount(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:outline-none\"\n                placeholder=\"0.1\"\n              />\n              <div className=\"text-xs text-gray-400 mt-1\">\n                ≈ {(parseFloat(purchaseAmount || '0') / 0.001).toFixed(0)} VIAZ tokens\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowPurchaseModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={isPurchasing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isPurchasing || !purchaseAmount || parseFloat(purchaseAmount) < 0.001}\n                className=\"flex-1 px-4 py-2 bg-gradient-to-r from-purple-600 to-cyan-500 hover:from-purple-700 hover:to-cyan-600 text-white rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isPurchasing ? (\n                  <>\n                    <Loader className=\"w-4 h-4 animate-spin\" />\n                    <span>Purchasing...</span>\n                  </>\n                ) : (\n                  <span>Buy Tokens</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};
~
    The parser expected to find a '}' to match the '{' token here.


Found 38 errors.

